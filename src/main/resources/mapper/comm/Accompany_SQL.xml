<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="accompany">
	
	<select id="selectBoardList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/> 
		<![CDATA[
			SELECT
				ROW_NUMBER() OVER (ORDER BY a.IDX DESC) RNUM,
			    a.IDX,
			    b.NICKNAME AS WRITER,
			    a.SUBJECT,
			    a.ZZIM_STATE,
			    TO_CHAR(a.WRITEDATE, 'YYYY.MM.DD') AS WRITEDATE,
			    NVL(a.THEME, '테마가 없습니다') AS THEME,
			    b.MEMBER_IMG
			FROM
			    COMM_ACCOMPANY a, MEMBER b
			WHERE
				a.DEL_FLAG = 'n' AND a.WRITER = b.EMAIL
		]]>
		<include refid="common.pagingPost"/> 
	</select>
	<select id="searchBoardList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/> 
		<![CDATA[
			SELECT
				ROW_NUMBER() OVER (ORDER BY a.IDX DESC) RNUM,
			    a.IDX,
			    b.NICKNAME AS WRITER,
			    a.SUBJECT,
			    a.ZZIM_STATE,
			    TO_CHAR(a.WRITEDATE, 'YYYY.MM.DD') AS WRITEDATE,
			    NVL(a.THEME, '테마가 없습니다') AS THEME,
			    b.MEMBER_IMG
			FROM
			    COMM_ACCOMPANY a, MEMBER b
			WHERE
					a.DEL_FLAG = 'n'
				AND	a.WRITER = b.EMAIL
				AND a.${searchType} LIKE '%'||#{searchKeyword}||'%'
		]]>
		<include refid="common.pagingPost"/> 
	</select>
	<select id="searchTagBoardList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/> 
		<![CDATA[
			SELECT
				ROW_NUMBER() OVER (ORDER BY a.IDX DESC) RNUM,
			    a.IDX,
			    b.NICKNAME AS WRITER,
			    a.SUBJECT,
			    a.ZZIM_STATE,
			    TO_CHAR(a.WRITEDATE, 'YYYY.MM.DD') AS WRITEDATE,
			    NVL(a.THEME, '테마가 없습니다') AS THEME,
			    b.MEMBER_IMG
			FROM
			    COMM_ACCOMPANY a, MEMBER b
			WHERE
					a.DEL_FLAG = 'n'
				AND	a.WRITER = b.EMAIL
				AND a.${searchType} LIKE '%'||#{searchKeyword}||'%'
		]]>
		<include refid="common.pagingPost"/> 
	</select>
	
	
	<insert id="insertBoard" parameterType="hashmap" useGeneratedKeys="true" keyProperty="IDX">
		<selectKey keyProperty="IDX" resultType="string" order="BEFORE">
			SELECT COMM_ACCOMPANY_IDX_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		<![CDATA[
			INSERT INTO COMM_ACCOMPANY
			(
				IDX,
			    WRITER,
			    SUBJECT,
			    CONTENT,
			    WRITEDATE,
			    THEME
			)
			VALUES
			(
				#{IDX},
				#{WRITER},
				#{SUBJECT},
				'sample',
			    SYSDATE, 
			    #{THEME}
			)
		]]>
	</insert>
	
	<!-- 컨텐트 내용 변경해서 다시 넣기 위한 쿼리 시리즈 -->
	<select id="getLastIDX" resultType="string">
		<![CDATA[
			SELECT MAX(IDX) FROM COMM_ACCOMPANY
		]]>
	</select>
	<update id="putContent" parameterType="hashmap">
		<![CDATA[
			UPDATE	COMM_ACCOMPANY
			SET		CONTENT	= #{CONTENT}
			WHERE	IDX		= #{IDX}
		]]>
	</update>
	
	<!-- 태그 넣기 위한 쿼리 시리즈. 태그테이블에 있으면 업데이트 없으면 인서트, 그리고 태그맵 테이블 인서트 -->
	<update id="tagInput" parameterType="string">
		<![CDATA[
			MERGE INTO  COMM_TAGS
      			USING DUAL
			ON (TAGNAME = #{0})
			WHEN MATCHED THEN
				UPDATE SET
					TAGCOUNT = TAGCOUNT + 1
				WHERE
					TAGNAME = #{0}
			WHEN NOT MATCHED THEN
				INSERT	(IDX, COMMTYPE, TAGNAME, TAGCOUNT)
				VALUES	(COMM_TAGS_IDX_SEQ.nextval, 1, #{0}, 1)
		]]>
	</update>
	<select id="getTagId" resultType = "integer" parameterType="string">
		<![CDATA[
			SELECT	IDX
			FROM	COMM_TAGS
			WHERE	TAGNAME = #{0}
		]]>
	</select>
	<insert id="tagmapInput" parameterType="hashmap">
		<![CDATA[
			INSERT INTO COMM_TAGMAP
				(IDX, COMMTYPE, TAG_ID, ARTICLEID)
			VALUES
				(COMM_TAGMAP_IDX_SEQ.nextval, 1, #{TAG_ID}, #{ARTICLEID})
		]]>
	</insert>
	
	<update id="removeTag" parameterType="hashmap">
		<![CDATA[
			UPDATE	COMM_TAGS
			SET		TAGCOUNT = TAGCOUNT - 1
			WHERE	TAGNAME = #{TAG} AND COMMTYPE = 1
		]]>
	</update>
	
	<update id="removeTagmap" parameterType="hashmap">
		<![CDATA[
			DELETE FROM	COMM_TAGMAP
			WHERE		ARTICLEID = #{IDX} 
					AND TAG_ID = #{TAGID}
					AND COMMTYPE = 1
		]]>
	</update>
	<update id="updateArticleTag" parameterType="hashmap">
		<![CDATA[
			UPDATE	COMM_ACCOMPANY
			SET		TAG = #{TAG}
			WHERE	IDX = #{IDX}
		]]>
	</update>
	
	<update id="updateHitCnt" parameterType="hashmap">
		<![CDATA[
			UPDATE COMM_ACCOMPANY 
			SET
				HITCOUNT = NVL(HITCOUNT, 0) + 1
			WHERE
				IDX = #{IDX}	
		]]>
	</update>
	
	
	<select id="selectBoardDetail" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
				a.IDX,
				b.NICKNAME AS WRITER,
				a.SUBJECT,
				a.CONTENT,
				a.HITCOUNT,
				a.WRITEDATE,
				a.ZZIM_STATE,
				a.DDAY,
				a.THEME
			FROM
				COMM_ACCOMPANY a, MEMBER b
			WHERE
				IDX = #{IDX}  AND a.WRITER = b.EMAIL
		]]>
	</select>
	
	<update id="updateBoard" parameterType="hashmap">
		<![CDATA[
			UPDATE COMM_ACCOMPANY 
			SET
				SUBJECT = #{SUBJECT},
				CONTENT = #{CONTENT}
			WHERE
				IDX = #{IDX}	
		]]>
	</update>
	
	<update id="deleteBoard" parameterType="hashmap">
		<![CDATA[
			UPDATE COMM_ACCOMPANY
			SET
				DEL_FLAG = 'y'
			WHERE
				IDX = #{IDX}
		]]>
	</update>
	
	
	
<!-- 찜카운트 -->	
	<select id="zzimCount" parameterType="hashmap" resultType="integer">
 		<![CDATA[
 			SELECT	COUNT(*)
 			FROM	COMM_ZZIM
 			WHERE	BOARD = 'accompany' AND ARTICLEID = #{IDX} 				
 		]]>
 	</select>
	
 <!-- 댓글부 -->
 	<select id="commentCount" parameterType="hashmap" resultType="integer">
 		<![CDATA[
 			SELECT	COUNT(*)
 			FROM	COMM_ACCOMPANY_COMMENT
 			WHERE	ARTICLEID = #{IDX} 				
 		]]>
 	</select>
 	
 	<select id="selectCommentList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/> 
		<![CDATA[
			SELECT
				ROW_NUMBER() OVER (ORDER BY a.REF DESC, a.RE_STEP ASC) RNUM,
			    a.IDX,
				b.NICKNAME AS WRITER,
				b.EMAIL,
			    a.CONTENT,
			    a.ZZIM,
			    a.REF,
			    a.RE_LEVEL,
			    a.RE_STEP,
			    TO_CHAR(a.WRITEDATE, 'YYYY.MM.DD HH:mm:SS') AS WRITEDATE,
			    b.MEMBER_IMG
			FROM
			    COMM_ACCOMPANY_COMMENT a, MEMBER b
			WHERE
				ARTICLEID = #{ARTICLEID} AND a.WRITER = b.EMAIL
		]]>
		<include refid="common.pagingPost"/> 
	</select>
	<select id="selectZzimCommentList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/> 
		<![CDATA[
			SELECT
				ROW_NUMBER() OVER (ORDER BY a.REF DESC, a.RE_STEP ASC) RNUM,
			    a.IDX,
				b.NICKNAME AS WRITER,
				b.EMAIL,
			    a.CONTENT,
			    a.ZZIM,
			    a.REF,
			    a.RE_LEVEL,
			    a.RE_STEP,
			    TO_CHAR(a.WRITEDATE, 'YYYY.MM.DD HH:mm:SS') AS WRITEDATE,
			    b.MEMBER_IMG
			FROM
			    COMM_ACCOMPANY_COMMENT a, MEMBER b
			WHERE
				ARTICLEID = #{ARTICLEID} AND a.WRITER = b.EMAIL AND a.ZZIM = 'y'
		]]>
		<include refid="common.pagingPost"/> 
	</select>
	
	
	
	<update id="commentUpdateRE_STEP" parameterType="hashmap">
		<![CDATA[
			UPDATE	COMM_ACCOMPANY_COMMENT
			SET		RE_STEP = #{RE_STEP}+1
			WHERE	REF = #{REF} AND
			        RE_STEP >= #{RE_STEP}
		]]>
	</update>
	<insert id="commentAdd" parameterType="hashmap" useGeneratedKeys="true" keyProperty="IDX">
		<selectKey keyProperty="IDX" resultType="string" order="BEFORE">
			SELECT COMM_ACCOMPANY_COMMENT_IDX_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		<![CDATA[
			INSERT INTO COMM_ACCOMPANY_COMMENT
			(
				IDX,
			    ARTICLEID,
			    WRITER,
			    CONTENT,
			    WRITEDATE,
			    REF,
			    RE_STEP,
			    RE_LEVEL,
			    ZZIM
			)
			VALUES
			(
				#{IDX},
				#{ARTICLEID},
				#{WRITER},
				#{CONTENT},
			    SYSDATE, 
			    #{REF},
			    #{RE_STEP},
			    #{RE_LEVEL},
			    #{ZZIM}
			)
		]]>
	</insert>
	<select id="getLatestComment" resultType="hashmap">
		<![CDATA[
			SELECT		* 
			FROM		COMM_ACCOMPANY_COMMENT
			WHERE		IDX = (	SELECT	MAX(IDX) FROM	COMM_ACCOMPANY_COMMENT)
			ORDER BY	IDX DESC
		]]>
	</select>
	<insert id="addZzim" parameterType="hashmap">
		<![CDATA[
			INSERT INTO COMM_ZZIM
			(
				idx,
				board,
				articleid,
				zzim_mem,
				zzim_date,
				commentid
			)
			VALUES
			(
				COMM_ZZIM_IDX_SEQ.NEXTVAL,
				'accompany',
				#{ARTICLEID},
				#{WRITER},
				sysdate,
				#{COMMENTID}
			)
		]]>
	</insert>
	<update id="commentUpdateREF">
		<![CDATA[
			UPDATE	COMM_ACCOMPANY_COMMENT
			SET		REF = (	SELECT	MAX(IDX)
			        FROM	COMM_ACCOMPANY_COMMENT
			        )
			WHERE	IDX = (	SELECT	MAX(IDX)
			        FROM	COMM_ACCOMPANY_COMMENT
        	)
		]]>
	</update>
	
	<update id="commentDelete" parameterType="hashmap">
		<![CDATA[
			DELETE FROM COMM_ACCOMPANY_COMMENT
			WHERE IDX = #{IDX}
		]]>
	</update>
</mapper>
