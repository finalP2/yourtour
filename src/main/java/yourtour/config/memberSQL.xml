<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

	<resultMap type="member" id="memberRes">
		<result property="email" column="email" />
		<result property="pw" column="pw" />
		<result property="name" column="name" />
		<result property="nickname" column="nickname" />
		<result property="admin" column="admin" />
		<result property="member_img" column="member_img" />
	</resultMap>
	
	<!-- 공통으로 사용할 select문 -->
	<sql id="select-all-m">
	SELECT * FROM MEMBER 
	</sql>
	
	<!-- 로그인 -->
	<select id="login" parameterType="member" resultMap="memberRes">
		<include refid="select-all-m" />
		where email= #{email} and pw =#{pw}
	</select>
	
	<!-- 회원가입  -->
	<insert id="insertMem" parameterType="HashMap">
		insert into member 
		 (email, pw, name, nickname)
		values 
		 (#{email}, #{pw}, #{name}, #{nickname})
	</insert>
	
	<!-- 이메일 인증 -->
	<update id="emailAuth" parameterType="HashMap">
	 update mem 
	 set m_admin = 1 
	 where m_email = #{m_email} and m_auth = #{m_auth}
	 </update>

	<!-- 인증번호 변경 -->
	<update id="changeAuth" parameterType="HashMap"> 
	update mem set m_auth = #{m_auth} 
	where m_email = #{m_email}
	 </update>
	
	<!-- 이메일 중복체크 -->
	<select id="emailCheck" parameterType="String" resultMap="memberRes"> 
		select *
		from member
		where email = #{email}
	</select> 
	
	<!-- 이름(닉네임) 중복체크 -->
	<select id="nameCheck" parameterType="String" resultMap="memberRes"> 
		select *
		from member
		where nickname = #{nickname}
	</select> 
	
	<!-- 이메일 찾기  -->
	 <select id="emailFind" parameterType="member" resultMap="memberRes"> 
		select *
		from member
		where name = #{name}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="pwFind" parameterType="member" resultMap="memberRes"> 
		select *
		from member 
		where name = #{name} and email = #{email} 
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="updateMem" parameterType="HashMap"> 
		update member set
		 nickname = #{nickname},
 		 pw = #{pw}
		where email = #{email}
 	</update> 
 	
 	<!-- 회원정보 수정, 회원탈퇴 시 로그인한 이메일 값 필요. -->
	<select id="getMember" parameterType="String" resultMap="memberRes">
		select *
		from member
		where email = #{email}
	</select>
	
	<!-- 회원탈퇴 --> 
 	<delete id="deleteMem" parameterType="String">
 		delete from member where email = #{email}
	</delete>

</mapper>


